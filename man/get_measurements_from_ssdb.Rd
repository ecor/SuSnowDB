% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_measurements_from_ssdb.R
\name{get_measurements_from_ssdb}
\alias{get_measurements_from_ssdb}
\title{Get measurements ("measurements" table) from a SumavaDB-like spatiotemporal database}
\usage{
get_measurements_from_ssdb(
  conn,
  table_name = "measurements",
  all = FALSE,
  variables_code0 = NULL,
  locations_code0 = NULL,
  returns.data.frame = FALSE,
  start_time = NA,
  end_time = NA,
  ...
)
}
\arguments{
\item{conn}{database (preferably PostgresSQL) connection. See output of \code{\link{dbConnect}}.}

\item{table_name}{name of the table . Default is \code{"measurements"}}

\item{all}{logical. if it is \code{TRUE} all measurements (types) are extracted. Default is \code{FALSE} if something else is specified.}

\item{variables_code0}{code of the types (\code{variable_code0}) of the measurements that are requested to be extracted.}

\item{locations_code0}{code of the locations (\code{location_code0}) where to extract the measurements}

\item{returns.data.frame}{logical. if it is \code{TRUE} function output is cated as a data frame. Default is \code{FALSE}.}

\item{start_time, end_time}{start and end time instants of the time interval in  which measurements are to be extrated.}

\item{...}{further arguments for \code{\link{tbl}}}
}
\description{
Get measurements ("measurements" table) from a SumavaDB-like spatiotemporal database
}
\examples{
\dontrun{
library(RPostgreSQL) 
dbname <- "hydroclimatedb_testing00"
conn = dbConnect(PostgreSQL(), dbname = dbname)


### Add weather data from stations from MeteoTrentino network, Trentino, Italy 
val_smet <- meteotrentino_smet_dataset(smet_files=c("T0175","T0179"))
add_locations_into_ssdb(conn,val_smet$locations,new=TRUE)
add_measurement_types_into_ssdb(conn,val_smet$measurement_type)
add_measurements_into_ssdb(conn,val_smet$measurements)

dbDisconnect(conn)

conn = dbConnect(PostgreSQL(), dbname = dbname)
out <- get_measurements_from_ssdb(conn)
out <- get_measurements_from_ssdb(conn,locations_code0="IT-TN_T0179")
out <- get_measurements_from_ssdb(conn,locations_code0="IT-TN_T0179",variables_code0=c("SMET_TA","SMET_PINT"))
out <- get_measurements_from_ssdb(conn,variables_code0=c("SMET_TA","SMET_PINT"))

time_interval <- as.Date(c("2021-03-01","2021-03-31"))
out <- get_measurements_from_ssdb(conn,variables_code0=c("SMET_TA","SMET_PINT"),start_time=time_interval[1],end_time=time_interval[2])
dbDisconnect(conn)

}
}
